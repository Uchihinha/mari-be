# HTTPS server
# Define the log format
# log_format healthd '$msec"$uri"' '$status"$request_time"$upstream_response_time"' '$http_x_forwarded_for';

server {
    listen       443 ssl;
    server_name  localhost;

    if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
		set $year $1;
		set $month $2;
		set $day $3;
		set $hour $4;
	}
	access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
    
    # ssl                  on;
    # ssl_certificate      /etc/pki/tls/certs/server.crt;
    # ssl_certificate_key  /etc/pki/tls/certs/server.key;

    ssl_certificate      /etc/letsencrypt/live/ebcert/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/ebcert/privkey.pem;
    
    ssl_session_timeout  5m;
    
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers   on;

    # if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") { 
    #     set $year $1; 
    #     set $month $2; 
    #     set $day $3; 
    #     set $hour $4; 
    # }

    # Define the location and format of the log files
    # access_log /var/log/nginx/access.log main; 
    # access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
    
    location / {
        proxy_pass  http://nodejs;
        proxy_set_header   Connection "";
        proxy_http_version 1.1;
        proxy_set_header        Host            $host;
        proxy_set_header        X-Real-IP       $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto https;
        proxy_buffering         off;
        proxy_cache             off;
        chunked_transfer_encoding off;
    }

    # location /socket.io {
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $http_host;
    #     proxy_set_header X-NginX-Proxy false;

    #     proxy_pass http://localhost:8081;
    #     proxy_redirect off;

    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    # }
}